#!/usr/bin/env python
# Copyright (C) 2009-2016 Bernd Feige
# This file is part of avg_q and released under the GPL v3 (see avg_q/COPYING).

import sys
import os
import avg_q
import avg_q.trgfile
import avg_q.paradigm
from avg_q.avg_q_file import formats_and_extensions

a=avg_q.avg_q()
for filename in sys.argv[1:]:
 parts=filename.split(':')
 if len(parts)==2 and parts[0] in dict(formats_and_extensions):
  filetype,filename=parts
 else:
  filetype=None
 if not os.path.exists(filename):
  print("Oops, %s doesn't exist - skipping..." % filename)
  continue
 base,ext=os.path.splitext(filename)
 if filetype is None and ext in ['.trg','.crs','.tri','.log','.vmrk','.xpe','.mkk']:
  # Assume trigger file
  if ext=='.log':
   # Assume Presentation log file
   import avg_q.Presentation
   trg=avg_q.Presentation.PresLogfile(filename)
  elif ext=='.vmrk':
   # Assume Brain Vision (TM) marker file
   import avg_q.BrainVision
   trg=avg_q.BrainVision.vmrkfile(filename)
  elif ext=='.xpe':
   # Assume Expyriment log file
   import avg_q.Expyriment
   trg=avg_q.Expyriment.ExpyrimentLogfile(filename)
  elif ext=='.mkk':
   # BT marker file
   import avg_q.Sleep.delphi_table
   mkkfile=avg_q.Sleep.delphi_table.delphi_table()
   mkkfile.read_file(filename)
   tuples=[(float(x[4]),1,'%s:%s:%s %s' % (x[0],x[1],x[2],x[3])) for x in mkkfile]
   trg=avg_q.trgfile.trgfile(source=tuples)
   trg.preamble['Sfreq']='1' # Entries are in seconds
  elif ext=='.tri':
   # nirx trigger file
   import avg_q.nirs
   trg=avg_q.nirs.nirx_trifile(filename)
  else:
   trg=avg_q.trgfile.trgfile(filename)
 else:
  infile=avg_q.avg_q_file(filename,filetype)
  trg=a.get_filetriggers(infile)
 triggers=trg.gettuples()
 trg.close()
 sfreq=trg.preamble.get('Sfreq')
 if sfreq:
  p=avg_q.paradigm.paradigm(triggers,float(sfreq))
 else:
  p=avg_q.paradigm.paradigm(triggers)
 stats=p.triggerstats()
 for code in sorted(stats):
  result=stats[code]
  if result.n<=1:
   print("%s Code %d: %d" % (filename, code, result.n))
  elif result.n==2:
   print("%s Code %d: %d [single diff %g]" % (filename, code, result.n, result.mean))
  else:
   print("%s Code %d: %d [mean %g+-%g, q0=%g q25=%g q50=%g q75=%g q100=%g]" % (filename, code, result.n, result.mean, result.sd, result.min, result.q25, result.q50, result.q75, result.max))
 if not stats:
  print("%s: No triggers!" % filename)
a.close()
